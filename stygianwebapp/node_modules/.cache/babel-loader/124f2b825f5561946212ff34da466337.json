{"ast":null,"code":"import { combineReducers } from 'redux';\n/* const im =\n[\n       {\n           name: \"Turtle\",\n           content: \"When did you change my username??\"\n       },\n       {\n           name: \"Driz\",\n           content: \"Just now. Why?\"\n       },\n       {\n           name: \"Turtle\",\n           content: \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n       },\n       {\n           name: \"Driz\",\n           content: \"That we're all fictional? Yeah, no biggie.\"\n       }\n   ] */\n\nconst messageReducer = (messageList = [{\n  name: \"Turtle\",\n  content: \"When did you change my username??\"\n}, {\n  name: \"Driz\",\n  content: \"Just now. Why?\"\n}, {\n  name: \"Turtle\",\n  content: \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n}, {\n  name: \"Driz\",\n  content: \"That we're all fictional? Yeah, no biggie.\"\n}], action) => {\n  //TODO: add more actions that reducer computes on; figure out if initialize_messages is correct\n  if (action.type === 'ADD MESSAGES') {\n    return messageList; //TODO: do something with the form and message\n  }\n\n  return messageList; //TODO: might need to change messageList = im in parameter\n};\n\nconst formReducer = (value = '', action) => {\n  if (action.type === \"HANDLE_SUBMIT\") {\n    //submit\n    return;\n  } else if (action.type === \"HANDLE_CHANGE\") {\n    //TODO: FIX THIS!!!!! NOTHING SHOWS UP\n    //typing in form input\n    return value;\n  }\n\n  return value + action.add; //THIS NEEDS TO KEEP TRACK OF INPUT\n};\n\nexport default combineReducers({\n  //Todo: messageList not connected to rest action, state, etc\n  messageList: messageReducer,\n  value: formReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n}); //alter","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/reducers/index.js"],"names":["combineReducers","messageReducer","messageList","name","content","action","type","formReducer","value","add"],"mappings":"AAAA,SAAQA,eAAR,QAA+B,OAA/B;AACA;;;;;;;;;;;;;;;;;;;;AAqBC,MAAMC,cAAc,GAAG,CAAEC,WAAW,GAAG,CACtC;AACIC,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADsC,EAKtC;AACID,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CALsC,EAStC;AACID,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CATsC,EAatC;AACID,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CAbsC,CAAhB,EAiBrBC,MAjBqB,KAiBV;AACX;AACF,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AACnC,WAAOJ,WAAP,CADmC,CACf;AACpB;;AACD,SAAOA,WAAP,CALa,CAKO;AACpB,CAvBA;;AAyBD,MAAMK,WAAW,GAAG,CAACC,KAAK,GAAC,EAAP,EAAWH,MAAX,KAAsB;AAExC,MAAIA,MAAM,CAACC,IAAP,KAAe,eAAnB,EAAoC;AAClC;AACA;AACD,GAHD,MAIK,IAAID,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACxC;AACA;AACA,WAAOE,KAAP;AACD;;AACD,SAAOA,KAAK,GAAGH,MAAM,CAACI,GAAtB,CAXwC,CAWb;AAC5B,CAZD;;AAcA,eAAeT,eAAe,CAAC;AAC7B;AACAE,EAAAA,WAAW,EAAED,cAFgB;AAG9BO,EAAAA,KAAK,EAAED,WAHuB,CAI/B;;AAJ+B,CAAD,CAA9B,C,CAOA","sourcesContent":["import {combineReducers } from 'redux';\n/* const im =\n[\n       {\n           name: \"Turtle\",\n           content: \"When did you change my username??\"\n       },\n       {\n           name: \"Driz\",\n           content: \"Just now. Why?\"\n       },\n       {\n           name: \"Turtle\",\n           content: \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n       },\n       {\n           name: \"Driz\",\n           content: \"That we're all fictional? Yeah, no biggie.\"\n       }\n   ] */\n\n\n const messageReducer = ( messageList = [\n  {\n      name: \"Turtle\",\n      content: \"When did you change my username??\"\n  },\n  {\n      name: \"Driz\",\n      content: \"Just now. Why?\"\n  },\n  {\n      name: \"Turtle\",\n      content: \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n  },\n  {\n      name: \"Driz\",\n      content: \"That we're all fictional? Yeah, no biggie.\"\n  }\n], action) => {\n   //TODO: add more actions that reducer computes on; figure out if initialize_messages is correct\n\tif (action.type === 'ADD MESSAGES') {\n\t\treturn messageList; //TODO: do something with the form and message\n\t}\n\treturn messageList; //TODO: might need to change messageList = im in parameter\n};\n\nconst formReducer = (value='', action) => {\n \n  if (action.type ===\"HANDLE_SUBMIT\") {\n    //submit\n    return ;\n  }\n  else if (action.type === \"HANDLE_CHANGE\") {\n    //TODO: FIX THIS!!!!! NOTHING SHOWS UP\n    //typing in form input\n    return value;\n  }\n  return value + action.add; //THIS NEEDS TO KEEP TRACK OF INPUT\n};\n \nexport default combineReducers({\n  //Todo: messageList not connected to rest action, state, etc\n  messageList: messageReducer,\n\tvalue: formReducer\n//anotherKey: anotherReducer //all your reducers should be combined\n});\n\n//alter"]},"metadata":{},"sourceType":"module"}