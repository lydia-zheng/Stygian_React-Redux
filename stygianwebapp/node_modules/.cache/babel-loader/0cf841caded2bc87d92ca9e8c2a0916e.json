{"ast":null,"code":"import { combineReducers } from 'redux';\nconst im = `\n[\n       {\n           \"name\": \"Turtle\",\n           \"content\": \"When did you change my username??\"\n       },\n       {\n           \"name\": \"Driz\",\n           \"content\": \"Just now. Why?\"\n       },\n       {\n           \"name\": \"Turtle\",\n           \"content\": \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n       },\n       {\n           \"name\": \"Driz\",\n           \"content\": \"That we're all fictional? Yeah, no biggie.\"\n       }\n   ]\n`;\n\nconst messageReducer = (messageList = im, action) => {\n  //TODO: add more actions that reducer computes on; figure out if initialize_messages is correct\n  if (action.type === 'INITIALIZE_MESSAGES') {\n    return JSON.parse(messageList); //DEBUG\n  }\n\n  return messageList;\n};\n\nexport default combineReducers({\n  messageList: messageReducer //count: counterReducer,\n  //anotherKey: anotherReducer //all your reducers should be combined\n\n}); //alter","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/reducers/index.js"],"names":["combineReducers","im","messageReducer","messageList","action","type","JSON","parse"],"mappings":"AAAA,SAAQA,eAAR,QAA+B,OAA/B;AACA,MAAMC,EAAE,GAAG;;;;;;;;;;;;;;;;;;;CAAX;;AAqBC,MAAMC,cAAc,GAAG,CAAEC,WAAW,GAAGF,EAAhB,EAAoBG,MAApB,KAA+B;AACpD;AACF,MAAIA,MAAM,CAACC,IAAP,KAAgB,qBAApB,EAA2C;AAC1C,WAAOC,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAP,CAD0C,CACV;AAChC;;AACD,SAAOA,WAAP;AACA,CANA;;AAQD,eAAeH,eAAe,CAAC;AAC7BG,EAAAA,WAAW,EAAED,cADgB,CAE9B;AACD;;AAH+B,CAAD,CAA9B,C,CAMA","sourcesContent":["import {combineReducers } from 'redux';\nconst im =`\n[\n       {\n           \"name\": \"Turtle\",\n           \"content\": \"When did you change my username??\"\n       },\n       {\n           \"name\": \"Driz\",\n           \"content\": \"Just now. Why?\"\n       },\n       {\n           \"name\": \"Turtle\",\n           \"content\": \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n       },\n       {\n           \"name\": \"Driz\",\n           \"content\": \"That we're all fictional? Yeah, no biggie.\"\n       }\n   ]\n`\n\n const messageReducer = ( messageList = im, action) => {\n   //TODO: add more actions that reducer computes on; figure out if initialize_messages is correct\n\tif (action.type === 'INITIALIZE_MESSAGES') {\n\t\treturn JSON.parse(messageList); //DEBUG\n\t}\n\treturn messageList;\n};\n \nexport default combineReducers({\n  messageList: messageReducer\n\t//count: counterReducer,\n//anotherKey: anotherReducer //all your reducers should be combined\n});\n\n//alter"]},"metadata":{},"sourceType":"module"}