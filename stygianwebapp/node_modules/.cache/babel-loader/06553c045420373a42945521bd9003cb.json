{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lydia\\\\OneDrive\\\\Documents\\\\UBC\\\\CPSC436I\\\\assignment_2\\\\src\\\\components\\\\MsgList.js\";\n//TODO EVERYTHING; template\nimport React, { Component } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nexport default function MsgList() {\n  const dispatch = useDispatch(); //useSelector is a function from react-redux that returns the part of the global state you want (or the gobal state but this should never be done)\n  //remember global state struction structure currently looks like this:\n  //state: {\n  //  value    \n  //}\n\n  const value = useSelector(state => state.value); //callback function to dispatch the handleChange 'action' to our 'reducers'\n  //todo: memoize with useCallback ??\n\n  const handle_User = e => {\n    dispatch(handleUser(e.target.name, e.target.value));\n  };\n\n  const handle_Msg = e => {\n    dispatch(handleMsg(e.target.name, e.target.value));\n  }; //test if this works or if the fields are needed\n\n\n  const handle_Submit = () => {\n    dispatch(handleSubmit(document.getElementById('name').value, document.getElementById('msg').value));\n  }; //TODO: implement handleSubmit\n  //maybe replace submit button to general button component type\n  // CHANGE TO HANDLE NAME AND HANDLE TEXT\n\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handle_Submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Username:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    type: \"text\",\n    value: value,\n    onChange: e => handle_User(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Enter Your Message:\", /*#__PURE__*/React.createElement(\"input\", {\n    id: \"msg\",\n    type: \"text\",\n    value: value,\n    onChange: e => handle_Msg(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/components/MsgList.js"],"names":["React","Component","useSelector","useDispatch","MsgList","dispatch","value","state","handle_User","e","handleUser","target","name","handle_Msg","handleMsg","handle_Submit","handleSubmit","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B,CAD8B,CAG9B;AACA;AACA;AACA;AACA;;AACA,QAAMG,KAAK,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB,CAR8B,CAU9B;AACA;;AACA,QAAME,WAAW,GAAIC,CAAD,IAAO;AACvBJ,IAAAA,QAAQ,CAACK,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,EAAgBH,CAAC,CAACE,MAAF,CAASL,KAAzB,CAAX,CAAR;AACF,GAFF;;AAIA,QAAMO,UAAU,GAAIJ,CAAD,IAAO;AACtBJ,IAAAA,QAAQ,CAACS,SAAS,CAACL,CAAC,CAACE,MAAF,CAASC,IAAV,EAAgBH,CAAC,CAACE,MAAF,CAASL,KAAzB,CAAV,CAAR;AACH,GAFD,CAhB8B,CAoB9B;;;AACA,QAAMS,aAAa,GAAG,MAAO;AACzBV,IAAAA,QAAQ,CAACW,YAAY,CAACC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCZ,KAAjC,EAAwCW,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BZ,KAAvE,CAAb,CAAR;AACH,GAFD,CArB8B,CA2B7B;AACE;AAEA;;;AACA,sBAAO;AAAM,IAAA,QAAQ,EAAGS,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAO,IAAA,EAAE,EAAE,MAAX;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,KAAK,EAAET,KAArC;AAA4C,IAAA,QAAQ,EAAGG,CAAD,IAAOD,WAAW,CAACC,CAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADM,eAKN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAEI;AAAO,IAAA,EAAE,EAAC,KAAV;AAAgB,IAAA,IAAI,EAAC,MAArB;AAA4B,IAAA,KAAK,EAAEH,KAAnC;AAA0C,IAAA,QAAQ,EAAGG,CAAD,IAAOI,UAAU,CAACJ,CAAD,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALM,eASF;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATE,CAAP;AAaN","sourcesContent":["//TODO EVERYTHING; template\r\nimport React, { Component } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\n\r\nexport default function MsgList (){\r\n    const dispatch = useDispatch();\r\n\r\n    //useSelector is a function from react-redux that returns the part of the global state you want (or the gobal state but this should never be done)\r\n    //remember global state struction structure currently looks like this:\r\n    //state: {\r\n    //  value    \r\n    //}\r\n    const value = useSelector(state => state.value);\r\n\r\n    //callback function to dispatch the handleChange 'action' to our 'reducers'\r\n    //todo: memoize with useCallback ??\r\n    const handle_User = (e) => {\r\n        dispatch(handleUser(e.target.name, e.target.value));\r\n     }\r\n\r\n    const handle_Msg = (e) => {\r\n        dispatch(handleMsg(e.target.name, e.target.value));\r\n    }\r\n\r\n    //test if this works or if the fields are needed\r\n    const handle_Submit = () =>  {\r\n        dispatch(handleSubmit(document.getElementById('name').value, document.getElementById('msg').value));\r\n    }\r\n\r\n\r\n\r\n     //TODO: implement handleSubmit\r\n       //maybe replace submit button to general button component type\r\n       \r\n       // CHANGE TO HANDLE NAME AND HANDLE TEXT\r\n       return(<form onSubmit= {handle_Submit}>\r\n        <label>\r\n            Username:\r\n            <input id =\"name\" type=\"text\" value={value} onChange={(e) => handle_User(e)}/>\r\n        </label>\r\n        <label>\r\n            Enter Your Message:\r\n            <input id=\"msg\" type=\"text\" value={value} onChange={(e) => handle_Msg(e)}/>\r\n        </label>\r\n            <input type=\"submit\" value=\"Submit\"></input> \r\n    </form>\r\n       );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}