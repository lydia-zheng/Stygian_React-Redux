{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lydia\\\\OneDrive\\\\Documents\\\\UBC\\\\CPSC436I\\\\assignment_2\\\\src\\\\components\\\\DetailView.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n//import MsgList from './MsgList';\n\nimport { useSelector } from 'react-redux'; //citing:https://upmostly.com/tutorials/modal-components-react-custom-hooks\n//A stateless functional component that takes two props and only returns HTML when isShowing is true.\n// Portals allow React components to render in another part of the DOM that is outside of their parent component.\n//we can use a Portal to mount our Modal component to the end of the document.body element\n// **modal component doesn’t actually handle it’s own state.** It's parent does\n//2 arguments for the createPortal function: \n//1)the modal component we want to render \n//2)the location of where we want to append the component.\n\n/* export default function DetailView (i){\r\n    //TODO NOT DISPLAYING CORRECTLY FOR INDEX 0\r\n    const activeMsgID = useSelector(state => state.id);\r\n    const msgList = useSelector(state =>state.messages.messages);\r\n    let name;\r\n    let content;\r\n    //console.log(\"activeMsgID:\", activeMsgID);\r\n    \r\n    \r\n    if (activeMsgID || activeMsgID === 0){\r\n        //console.log(\"insideActiveMsg\");\r\n        \r\n        name = msgList[activeMsgID].name;\r\n        content = msgList[activeMsgID].content;\r\n    }\r\n\r\n    return (\r\n        <div id= \"detailedView\" className='popup'>\r\n            <div className=\"popup_inner\">\r\n                <h1>Detailed View </h1>\r\n            <p>message index is: {activeMsgID} <br/><br/>\r\n            message username: {name}<br/><br/>\r\n            message content: {content}<br/><br/>\r\n            </p>\r\n            <button onClick={this.props.closePopup}>close me</button>\r\n            </div>\r\n            \r\n\r\n        </div>   \r\n    );\r\n} */\n\nconst activeMsgID = useSelector(state => state.id);\nconst msgList = useSelector(state => state.messages.messages);\nlet name;\nlet content; //console.log(\"activeMsgID:\", activeMsgID);\n\nif (activeMsgID || activeMsgID === 0) {\n  //console.log(\"insideActiveMsg\");\n  name = msgList[activeMsgID].name;\n  content = msgList[activeMsgID].content;\n}\n\nconst DetailView = ({\n  isShowing,\n  hide,\n  i\n}) => isShowing ? ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  id: \"detailedView\",\n  className: \"popup\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"popup_inner\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 17\n  }\n}, \"Detailed View \"), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }\n}, \"message index is: \", activeMsgID, \" \", /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 48\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 53\n  }\n}), \"message username: \", name, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 37\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 42\n  }\n}), \"message content: \", content, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 39\n  }\n}), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 44\n  }\n})), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: this.props.closePopup,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 13\n  }\n}, \"close me\")))), document.body) : null;\n\nexport default DetailView;","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/components/DetailView.js"],"names":["React","useSelector","activeMsgID","state","id","msgList","messages","name","content","DetailView","isShowing","hide","i","ReactDOM","createPortal","props","closePopup","document","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;AACA;AACA;AACA;AAGA;AAEA;AACQ;AACA;;AAIR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,MAAMC,WAAW,GAAGD,WAAW,CAACE,KAAK,IAAIA,KAAK,CAACC,EAAhB,CAA/B;AACI,MAAMC,OAAO,GAAGJ,WAAW,CAACE,KAAK,IAAGA,KAAK,CAACG,QAAN,CAAeA,QAAxB,CAA3B;AACA,IAAIC,IAAJ;AACA,IAAIC,OAAJ,C,CACJ;;AAGI,IAAIN,WAAW,IAAIA,WAAW,KAAK,CAAnC,EAAqC;AACjC;AAEAK,EAAAA,IAAI,GAAGF,OAAO,CAACH,WAAD,CAAP,CAAqBK,IAA5B;AACAC,EAAAA,OAAO,GAAGH,OAAO,CAACH,WAAD,CAAP,CAAqBM,OAA/B;AACH;;AAEL,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAA0BF,SAAS,GAAGG,QAAQ,CAACC,YAAT,eAGrD,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,EAAE,EAAE,cAAT;AAAwB,EAAA,SAAS,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBZ,WAAtB,oBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAnC,eAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxC,wBACmBK,IADnB,eACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADxB,eAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAD7B,uBAEkBC,OAFlB,eAE0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAF1B,eAE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAF/B,CAFA,eAMA;AAAQ,EAAA,OAAO,EAAE,KAAKO,KAAL,CAAWC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,CADJ,CADJ,CAHqD,EAgBlCC,QAAQ,CAACC,IAhByB,CAAH,GAkBnD,IAlBH;;AAoBA,eAAeT,UAAf","sourcesContent":["import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\n//import MsgList from './MsgList';\r\nimport { useSelector } from 'react-redux';\r\n\r\n//citing:https://upmostly.com/tutorials/modal-components-react-custom-hooks\r\n//A stateless functional component that takes two props and only returns HTML when isShowing is true.\r\n// Portals allow React components to render in another part of the DOM that is outside of their parent component.\r\n//we can use a Portal to mount our Modal component to the end of the document.body element\r\n\r\n\r\n// **modal component doesn’t actually handle it’s own state.** It's parent does\r\n\r\n//2 arguments for the createPortal function: \r\n        //1)the modal component we want to render \r\n        //2)the location of where we want to append the component.\r\n\r\n\r\n\r\n/* export default function DetailView (i){\r\n    //TODO NOT DISPLAYING CORRECTLY FOR INDEX 0\r\n    const activeMsgID = useSelector(state => state.id);\r\n    const msgList = useSelector(state =>state.messages.messages);\r\n    let name;\r\n    let content;\r\n    //console.log(\"activeMsgID:\", activeMsgID);\r\n    \r\n    \r\n    if (activeMsgID || activeMsgID === 0){\r\n        //console.log(\"insideActiveMsg\");\r\n        \r\n        name = msgList[activeMsgID].name;\r\n        content = msgList[activeMsgID].content;\r\n    }\r\n\r\n    return (\r\n        <div id= \"detailedView\" className='popup'>\r\n            <div className=\"popup_inner\">\r\n                <h1>Detailed View </h1>\r\n            <p>message index is: {activeMsgID} <br/><br/>\r\n            message username: {name}<br/><br/>\r\n            message content: {content}<br/><br/>\r\n            </p>\r\n            <button onClick={this.props.closePopup}>close me</button>\r\n            </div>\r\n            \r\n\r\n        </div>   \r\n    );\r\n} */\r\n\r\nconst activeMsgID = useSelector(state => state.id);\r\n    const msgList = useSelector(state =>state.messages.messages);\r\n    let name;\r\n    let content;\r\n//console.log(\"activeMsgID:\", activeMsgID);\r\n    \r\n    \r\n    if (activeMsgID || activeMsgID === 0){\r\n        //console.log(\"insideActiveMsg\");\r\n        \r\n        name = msgList[activeMsgID].name;\r\n        content = msgList[activeMsgID].content;\r\n    }\r\n\r\nconst DetailView = ({isShowing, hide, i}) => isShowing ? ReactDOM.createPortal(\r\n\r\n    \r\n    <React.Fragment>\r\n        <div id= \"detailedView\" className='popup'>\r\n            <div className=\"popup_inner\">\r\n                <h1>Detailed View </h1>\r\n            <p>message index is: {activeMsgID} <br/><br/>\r\n            message username: {name}<br/><br/>\r\n            message content: {content}<br/><br/>\r\n            </p>\r\n            <button onClick={this.props.closePopup}>close me</button>\r\n            </div>\r\n            \r\n\r\n    </div>   \r\n    </React.Fragment>, document.body  \r\n    \r\n): null;\r\n    \r\nexport default DetailView;"]},"metadata":{},"sourceType":"module"}