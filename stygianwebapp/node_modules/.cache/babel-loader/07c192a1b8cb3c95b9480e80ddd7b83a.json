{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst counterReducer = (count = 0, action) => {\n  if (action.type === 'INCREMENT_COUNTER') {\n    return count + action.increment;\n  }\n\n  return count;\n};\n\nexport default combineReducers({\n  count: counterReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/reducers/index.js"],"names":["combineReducers","counterReducer","count","action","type","increment"],"mappings":"AAAA,SAAQA,eAAR,QAA+B,OAA/B;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG,CAAT,EAAYC,MAAZ,KAAuB;AAC7C,MAAIA,MAAM,CAACC,IAAP,KAAgB,mBAApB,EAAyC;AACxC,WAAOF,KAAK,GAAGC,MAAM,CAACE,SAAtB;AACA;;AACD,SAAOH,KAAP;AACA,CALD;;AAOA,eAAeF,eAAe,CAAC;AAC9BE,EAAAA,KAAK,EAAED,cADuB,CAE/B;;AAF+B,CAAD,CAA9B","sourcesContent":["import {combineReducers } from 'redux';\n\nconst counterReducer = (count = 0, action) => {\n\tif (action.type === 'INCREMENT_COUNTER') {\n\t\treturn count + action.increment;\n\t}\n\treturn count;\n};\n\nexport default combineReducers({\n\tcount: counterReducer,\n//anotherKey: anotherReducer //all your reducers should be combined\n});\n"]},"metadata":{},"sourceType":"module"}