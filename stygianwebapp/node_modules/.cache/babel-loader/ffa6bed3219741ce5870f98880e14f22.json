{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lydia\\\\OneDrive\\\\Documents\\\\UBC\\\\CPSC436I\\\\assignment_2\\\\src\\\\components\\\\DetailView.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n//import MsgList from './MsgList';\n\nimport { useSelector } from 'react-redux'; //citing:https://upmostly.com/tutorials/modal-components-react-custom-hooks\n//A stateless functional component that takes two props and only returns HTML when isShowing is true.\n// Portals allow React components to render in another part of the DOM that is outside of their parent component.\n//we can use a Portal to mount our Modal component to the end of the document.body element\n// **modal component doesn’t actually handle it’s own state.** It's parent does\n//2 arguments for the createPortal function: \n//1)the modal component we want to render \n//2)the location of where we want to append the component.\n\nexport default function DetailView(i) {\n  //TODO NOT DISPLAYING CORRECTLY FOR INDEX 0\n  const activeMsgID = useSelector(state => state.id);\n  const msgList = useSelector(state => state.messages.messages);\n  let name;\n  let content;\n\n  if (activeMsgID) {\n    console.log(\"insideActiveMsg\");\n    console.log(\"name is:\", msgList[activeMsgID].name);\n    console.log(\"content is:\", msgList[activeMsgID].content);\n    name = msgList[activeMsgID].name;\n    content = msgList[activeMsgID].content;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"detailedView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Detailed View \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"message index is: \", activeMsgID, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 48\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 53\n    }\n  }), \"message username: \", name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 42\n    }\n  }), \"message content: \", content, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/components/DetailView.js"],"names":["React","useSelector","DetailView","i","activeMsgID","state","id","msgList","messages","name","content","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;AACA;AACA;AACA;AAGA;AAEA;AACQ;AACA;;AAIR,eAAe,SAASC,UAAT,CAAqBC,CAArB,EAAuB;AAClC;AACA,QAAMC,WAAW,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,EAAhB,CAA/B;AACA,QAAMC,OAAO,GAAGN,WAAW,CAACI,KAAK,IAAGA,KAAK,CAACG,QAAN,CAAeA,QAAxB,CAA3B;AACA,MAAIC,IAAJ;AACA,MAAIC,OAAJ;;AAEA,MAAIN,WAAJ,EAAgB;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,OAAO,CAACH,WAAD,CAAP,CAAqBK,IAA7C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,OAAO,CAACH,WAAD,CAAP,CAAqBM,OAAhD;AACAD,IAAAA,IAAI,GAAGF,OAAO,CAACH,WAAD,CAAP,CAAqBK,IAA5B;AACAC,IAAAA,OAAO,GAAGH,OAAO,CAACH,WAAD,CAAP,CAAqBM,OAA/B;AACH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAE,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBN,WAAtB,oBAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,eAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxC,wBACmBK,IADnB,eACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,eAC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,uBAEkBC,OAFlB,eAE0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF1B,eAE+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF/B,CAFJ,CADJ;AAUH","sourcesContent":["import React from 'react';\r\n//import ReactDOM from 'react-dom';\r\n//import MsgList from './MsgList';\r\nimport { useSelector } from 'react-redux';\r\n\r\n//citing:https://upmostly.com/tutorials/modal-components-react-custom-hooks\r\n//A stateless functional component that takes two props and only returns HTML when isShowing is true.\r\n// Portals allow React components to render in another part of the DOM that is outside of their parent component.\r\n//we can use a Portal to mount our Modal component to the end of the document.body element\r\n\r\n\r\n// **modal component doesn’t actually handle it’s own state.** It's parent does\r\n\r\n//2 arguments for the createPortal function: \r\n        //1)the modal component we want to render \r\n        //2)the location of where we want to append the component.\r\n\r\n\r\n\r\nexport default function DetailView (i){\r\n    //TODO NOT DISPLAYING CORRECTLY FOR INDEX 0\r\n    const activeMsgID = useSelector(state => state.id);\r\n    const msgList = useSelector(state =>state.messages.messages);\r\n    let name;\r\n    let content;\r\n    \r\n    if (activeMsgID){\r\n        console.log(\"insideActiveMsg\");\r\n        console.log(\"name is:\", msgList[activeMsgID].name);\r\n        console.log(\"content is:\", msgList[activeMsgID].content);\r\n        name = msgList[activeMsgID].name;\r\n        content = msgList[activeMsgID].content;\r\n    }\r\n\r\n    return (\r\n        <div id= \"detailedView\">\r\n            <h1>Detailed View </h1>\r\n            <p>message index is: {activeMsgID} <br/><br/>\r\n            message username: {name}<br/><br/>\r\n            message content: {content}<br/><br/>\r\n            </p>\r\n\r\n        </div>   \r\n    );\r\n}\r\n\r\n "]},"metadata":{},"sourceType":"module"}