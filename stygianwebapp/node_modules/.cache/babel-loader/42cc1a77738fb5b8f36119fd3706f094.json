{"ast":null,"code":"import { combineReducers } from 'redux';\n\nconst messageReducer = (messageList = [{\n  name: \"Turtle\",\n  content: \"When did you change my username??\"\n}, {\n  name: \"Driz\",\n  content: \"Just now. Why?\"\n}, {\n  name: \"Turtle\",\n  content: \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n}, {\n  name: \"Driz\",\n  content: \"That we're all fictional? Yeah, no biggie.\"\n}], action) => {\n  //TODO: add more actions that reducer computes on; figure out if initialize_messages is correct\n  if (action.type === 'ADD MESSAGES') {\n    return messageList; //TODO: do something with the form and message\n  }\n\n  return messageList; //TODO: might need to change messageList = im in parameter\n};\n\nconst formReducer = (value, action) => {\n  if (action.type === \"HANDLE_SUBMIT\") {//submit\n    //TODO\n  } else if (action.type === \"HANDLE_USER\") {\n    //typing in form input; FIXED!! Finally text shows up!!\n    return value = action.value; //THIS NEEDS TO KEEP TRACK OF INPUT\n  } //TODO: add another handlechange for separate text input\n  else if (action.type === \"HANDLE_MSG\") {\n      return value = action.value;\n    }\n\n  return value;\n};\n\nexport default combineReducers({\n  //Todo: messageList not connected to rest action, state, etc\n  messageList: messageReducer,\n  value: formReducer //anotherKey: anotherReducer //all your reducers should be combined\n\n});","map":{"version":3,"sources":["C:/Users/lydia/OneDrive/Documents/UBC/CPSC436I/assignment_2/src/reducers/index.js"],"names":["combineReducers","messageReducer","messageList","name","content","action","type","formReducer","value"],"mappings":"AAAA,SAAQA,eAAR,QAA+B,OAA/B;;AAGC,MAAMC,cAAc,GAAG,CAAEC,WAAW,GAAG,CACtC;AACIC,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADsC,EAKtC;AACID,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CALsC,EAStC;AACID,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CATsC,EAatC;AACID,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CAbsC,CAAhB,EAiBrBC,MAjBqB,KAiBV;AACX;AACF,MAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AACnC,WAAOJ,WAAP,CADmC,CACf;AACpB;;AACD,SAAOA,WAAP,CALa,CAKO;AACpB,CAvBA;;AA2BD,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAQH,MAAR,KAAmB;AAErC,MAAIA,MAAM,CAACC,IAAP,KAAe,eAAnB,EAAoC,CAClC;AACA;AAED,GAJD,MAKK,IAAID,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACtC;AACA,WAAOE,KAAK,GAAGH,MAAM,CAACG,KAAtB,CAFsC,CAET;AAC9B,GAHI,CAIL;AAJK,OAKA,IAAIH,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AACrC,aAAOE,KAAK,GAAGH,MAAM,CAACG,KAAtB;AACD;;AACD,SAAOA,KAAP;AACD,CAhBD;;AAkBA,eAAeR,eAAe,CAAC;AAC7B;AACAE,EAAAA,WAAW,EAAED,cAFgB;AAG7BO,EAAAA,KAAK,EAAED,WAHsB,CAK/B;;AAL+B,CAAD,CAA9B","sourcesContent":["import {combineReducers } from 'redux';\n\n\n const messageReducer = ( messageList = [\n  {\n      name: \"Turtle\",\n      content: \"When did you change my username??\"\n  },\n  {\n      name: \"Driz\",\n      content: \"Just now. Why?\"\n  },\n  {\n      name: \"Turtle\",\n      content: \"Urg. Nevermind that, did you hear about the news? Apparently..\"\n  },\n  {\n      name: \"Driz\",\n      content: \"That we're all fictional? Yeah, no biggie.\"\n  }\n], action) => {\n   //TODO: add more actions that reducer computes on; figure out if initialize_messages is correct\n\tif (action.type === 'ADD MESSAGES') {\n\t\treturn messageList; //TODO: do something with the form and message\n\t}\n\treturn messageList; //TODO: might need to change messageList = im in parameter\n};\n\n\n\nconst formReducer = (value, action) => {\n \n  if (action.type ===\"HANDLE_SUBMIT\") {\n    //submit\n    //TODO\n\n  }\n  else if (action.type === \"HANDLE_USER\") {\n    //typing in form input; FIXED!! Finally text shows up!!\n    return value = action.value; //THIS NEEDS TO KEEP TRACK OF INPUT\n  }\n  //TODO: add another handlechange for separate text input\n  else if (action.type === \"HANDLE_MSG\") {\n    return value = action.value;\n  }\n  return value; \n};\n \nexport default combineReducers({\n  //Todo: messageList not connected to rest action, state, etc\n  messageList: messageReducer,\n  value: formReducer\n \n//anotherKey: anotherReducer //all your reducers should be combined\n});\n\n"]},"metadata":{},"sourceType":"module"}